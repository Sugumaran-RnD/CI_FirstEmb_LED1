name: CI-CD for ESP32

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # -------------------------------
  # 1. Static Analysis (Cppcheck)
  # -------------------------------
  cppcheck:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc make cppcheck python3 \
                                 gcc-arm-none-eabi binutils-arm-none-eabi wget
          # Install cppcheck-htmlreport manually
          wget https://raw.githubusercontent.com/danmar/cppcheck/main/htmlreport/cppcheck-htmlreport \
               -O /usr/local/bin/cppcheck-htmlreport
          chmod +x /usr/local/bin/cppcheck-htmlreport

      - name: Run cppcheck and generate XML
        run: |
          cppcheck --enable=all --inconclusive --xml --xml-version=2 \
            -I./src src tests 2> cppcheck-report.xml

      - name: Generate HTML report
        run: |
          cppcheck-htmlreport --file=cppcheck-report.xml \
                              --report-dir=cppcheck-html-report \
                              --source-dir=.

      - name: Upload HTML report artifact
        uses: actions/upload-artifact@v4
        with:
          name: cppcheck-html-report
          path: cppcheck-html-report

  # -------------------------------
  # 2. Build & Deploy on ESP32 (CD)
  # -------------------------------
  build-and-deploy:
    runs-on: self-hosted
    needs: cppcheck   # Run only after cppcheck passes

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install ESP-IDF
        run: |
          if [ ! -d "$HOME/esp-idf" ]; then
            git clone -b v5.2 --recursive https://github.com/espressif/esp-idf.git $HOME/esp-idf
            cd $HOME/esp-idf
            ./install.sh
          fi
          echo ". $HOME/esp-idf/export.sh" >> $GITHUB_ENV

      - name: Build ESP32 firmware
        run: |
          . $HOME/esp-idf/export.sh
          idf.py build

      - name: Flash ESP32
        run: |
          . $HOME/esp-idf/export.sh
          idf.py -p /dev/ttyUSB0 flash
